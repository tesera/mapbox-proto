'use strict'; // code generated by pbf v3.1.0

// Test ========================================

var Test = exports.Test = {};

Test.read = function (pbf, end) {
    return pbf.readFields(Test._readField, {foo: "", num: 0}, end);
};
Test._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.foo = pbf.readString();
    else if (tag === 2) obj.num = pbf.readVarint(true);
};
Test.write = function (obj, pbf) {
    if (obj.foo) pbf.writeStringField(1, obj.foo);
    if (obj.num) pbf.writeVarintField(2, obj.num);
};

// Nested ========================================

var Nested = exports.Nested = {};

Nested.read = function (pbf, end) {
    return pbf.readFields(Nested._readField, {tests: []}, end);
};
Nested._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.tests.push(Test.read(pbf, pbf.readVarint() + pbf.pos));
};
Nested.write = function (obj, pbf) {
    if (obj.tests) for (var i = 0; i < obj.tests.length; i++) pbf.writeMessage(1, Test.write, obj.tests[i]);
};
